@using FollowTheTask.Web.Infrastructure
@using Microsoft.AspNet.Identity
@model FollowTheTask.BLL.Services.Issue.ViewModels.IssueInfoViewModel

@{
    ViewBag.Title = Model.Name;
}

<div>
    <h2>@Model.Name</h2>
    <ul class="nav nav-pills">
        @if (PermissionResolver.IssueEditGeneralPermission(int.Parse(User.Identity.GetUserId()), Model.Id))
        {
            <li>@Html.ActionLink("Edit", "Edit", new {id = Model.Id})</li>
        }
        @if (PermissionResolver.IssueDeletePermission(int.Parse(User.Identity.GetUserId()), Model.Id))
        {
            <li>@Html.ActionLink("Delete", "Delete", new {id = Model.Id})</li>
        }
        @if (PermissionResolver.IssueAssignPermission(int.Parse(User.Identity.GetUserId()), Model.Id))
        {
            <li>@Html.ActionLink("Assign To Me", "AssignToMe", new { issueId = Model.Id })</li>
        }
        <li>@Html.ActionLink("Back to feature", "Index", "Feature", new { id = Model.FeatureId }, new { })</li>
    </ul>
    <hr/>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Version)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Version)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TypeId)
        </dt>

        <dd>
            @StaticValues.Instance.IssueTypes[Model.ResolutionId ?? 0]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PriorityId)
        </dt>

        <dd>
            @StaticValues.Instance.Priorities[Model.ResolutionId ?? 0]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StatusId)
        </dt>

        <dd>
            @StaticValues.Instance.Statuses[Model.StatusId ?? 0]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ResolutionId)
        </dt>

        <dd>
            @StaticValues.Instance.Resolutions[Model.ResolutionId ?? 0]
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDateUtc)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDateUtc)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.DeadlineDateUtc)
        </dt>*@

        @*<dd>
            @Html.DisplayFor(model => model.DeadlineDateUtc)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.ReporterName)
        </dt>

        <dd>
            @(Model.ReporterId == null ? Html.DisplayFor(model => model.ReporterName) : Html.DisplayFor(model => model.Reporter))
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AssigneeName)
        </dt>

        <dd>
            @(Model.AssigneeId == null ? Html.DisplayFor(model => model.AssigneeName) : Html.DisplayFor(model => model.Assignee))
        </dd>

    </dl>
</div>

<div>
    <h3>Comments</h3>

    @Html.Action("GetComments", new { issueId = Model.Id })

    @Html.Action("Create", "Comment", new { issueId = Model.Id })
</div>