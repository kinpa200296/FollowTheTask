@model FollowTheTask.Models.Users.UserModel
@{
    ViewBag.Title = "Редактирование пользователя " + Model.UserName;
}

<h2>@ViewBag.Title</h2>

<ul class="nav nav-pills">
    <li>@Html.ActionLink("Назад к списку пользователей", "Index", "Users")</li>
    <li>@Html.ActionLink("Подробности", "Details", "Users", new { username = Model.UserName }, null)</li>
    @if ((User.IsInRole("owner") && !Model.Roles.First(role => role.Name == "owner").IsUserInRole) ||
         User.IsInRole("admin") && !(Model.Roles.First(role => role.Name == "owner").IsUserInRole ||
                                     Model.Roles.First(role => role.Name == "admin").IsUserInRole))
    {        
        <li>@Html.ActionLink("Удаление", "Delete", "Users", new {username = Model.UserName}, null)</li>
    }
</ul>

<div class="form-horizontal">
    @using (Html.BeginForm("Edit", "Users", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        
        @Html.ValidationSummary(true, "", new {@class="text-danger"})

        if (User.IsInRole("owner"))
        {
            <div class="form-group row">
                @Html.LabelFor(m => m.UserName, new {@class = "control-label col-md-2"})
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.UserName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.UserName, "", new {@class = "text-danger"})
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.UserName)
        }
        <div class="form-group row">
            @Html.LabelFor(m => m.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Roles, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @for (var i = 0; i < Model.Roles.Length; i++)
                {
                    <p>
                        @Html.CheckBoxFor(m => m.Roles[i].IsUserInRole, new { @class = "checkbox-inline" })
                        @Html.DisplayFor(m => m.Roles[i].DisplayName)
                        @Html.ValidationMessageFor(m => m.Roles[i].IsUserInRole, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.Roles[i].Name)
                        @Html.HiddenFor(m => m.Roles[i].DisplayName)
                    </p>
                }
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
                @Html.ActionLink("Отмена", "Index", "Users", new { @class = "btn btn-default" })
            </div>
        </div>
    }
</div>
    
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}